// Copyright 2020 The Measurement Proto Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.api.v2alpha;

import "wfa/measurement/api/v2alpha/data_provider.proto";
import "wfa/measurement/api/v2alpha/measurement_consumer.proto";

option java_package = "org.wfanet.measurement.api.v2alpha";
option java_multiple_files = true;
option java_outer_classname = "EventGroupSearchServiceProto";

// Kingdom service for searching `EventGroup`s and `DataProvider`s.
service EventGroupSearch {
  // Lists `EventGroup`s. Results in a PERMISSION_DENIED error if attempting to
  // list `EventGroup`s that the authenticated user does not have access to.
  rpc ListEventGroups(ListEventGroupsRequest)
      returns (ListEventGroupsResponse) {}
}

message ListEventGroupsRequest {
  // Resource key of the parent `DataProvider`. The `DataProvider` ID may be
  // omitted to list across `DataProvider`s, in which case a filter should be
  // specified.
  DataProvider.Key parent = 1;

  // The maximum number of resources to return. See https://aip.dev/158.
  int32 page_size = 2;
  // A token from a previous call, specified to retrieve the next page. See
  // https://aip.dev/158.
  string page_token = 3;

  // Filter criteria. Repeated fields are treated as logical ORs, and multiple
  // fields specified as logical ANDs.
  message Filter {
    repeated MeasurementConsumer.Key measurement_consumers = 1;
  }
  // Result filter.
  Filter filter = 4;
}

message ListEventGroupsResponse {
  // The `EventGroup` resources.
  repeated EventGroup event_groups = 1;

  // A token that can be specified in a subsequent call to retrieve the next
  // page. See https://aip.dev/158.
  string next_page_token = 2;
}
