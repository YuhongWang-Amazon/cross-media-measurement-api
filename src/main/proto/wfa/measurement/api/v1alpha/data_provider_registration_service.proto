syntax = "proto3";

package wfa.measurement.api.v1alpha;

import "wfa/measurement/api/v1alpha/advertiser.proto";
import "wfa/measurement/api/v1alpha/data_provider.proto";

option java_package = "org.wfanet.measurement.api.v1alpha";
option java_multiple_files = true;
option java_outer_classname = "DataProviderRegistrationServiceProto";

// Kingdom service for registration of data providers.
service DataProviderRegistration {
  // Creates (registers) a DataProvider.
  rpc CreateDataProvider(CreateDataProviderRequest) returns (DataProvider) {}

  // Creates (registers) a Campaign in the specified DataProvider's system.
  rpc CreateCampaign(CreateCampaignRequest) returns (Campaign) {}

  // Lists the Campaigns for the specified parent DataProvider.
  rpc ListCampaigns(ListCampaignsRequest) returns (ListCampaignsResponse) {}
}

// Request message for CreateDataProvider method.
message CreateDataProviderRequest {
  // The DataProvider to create. Required. The `key` field will be ignored, and
  // the system will assign an ID.
  DataProvider data_provider = 1;
}

// Request message for CreateCampaign method.
message CreateCampaignRequest {
  // Resource key of the parent DataProvider. Required.
  DataProvider.Key parent = 1;

  // The Campaign to create. Required.
  //
  // The `key` field will be ignored, and the system will assign an ID. Results
  // in an ALREADY_EXISTS error if there is already a child Campaign with the
  // same `campaign_reference_id`.
  Campaign campaign = 2;
}

message ListCampaignsRequest {
  // Resource key of the parent DataProvider. Required. The DataProvider ID may
  // be omitted to list across DataProviders.
  //
  // Results in a PERMISSION_DENIED error if attempting to access resources that
  // the authenticated user does not have permissions for.
  DataProvider.Key parent = 1;

  // The maximum number of resources to return. See https://aip.dev/158.
  int32 page_size = 2;
  // A token from a previous call, specified to retrieve the next page. See
  // https://aip.dev/158.
  string page_token = 3;

  // Filter criteria. Repeated fields are treated as logical ORs, and multiple
  // fields specified as logical ANDs.
  message Filter {
    repeated Advertiser.Key advertisers = 1;
  }
  // Result filter. If a page token is specified, then this will be ignored and
  // the filter for the first page will be applied.
  Filter filter = 4;
}

message ListCampaignsResponse {
  // The Campaign resources.
  repeated Campaign campaigns = 1;

  // A token that can be specified in a subsequent call to retrieve the next
  // page. See https://aip.dev/158.
  string next_page_token = 2;
}
